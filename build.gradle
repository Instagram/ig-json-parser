buildscript {
}

apply plugin: 'groovy'

subprojects {
  repositories {
    mavenCentral()
  }
}

task processorJar(type: Jar,
        dependsOn:["javawriter:build","common:build","util:build","processor:build"]) {
    from files( { project(':javawriter').sourceSets.main.output.classesDir } )
    from files( { project(':common').sourceSets.main.output.classesDir } )
    from files( { project(':util').sourceSets.main.output.classesDir } )
    from files( { project(':processor').sourceSets.main.output.classesDir } )
    baseName 'processor'
}

task runtimeJar(type: Jar,
        dependsOn: "common:build") {
    from files( { project(':common').sourceSets.main.output.classesDir } )
    baseName 'runtime'
}

task runtimeSourcesJar(type: Jar) {
    classifier = 'sources'
    baseName 'runtime'
    from files( { project(':common').sourceSets.main.allSource } )
}

task processorSourcesJar(type: Jar) {
    classifier = 'sources'
    baseName 'processor'
    from files( { project(':javawriter').sourceSets.main.allSource } )
    from files( { project(':common').sourceSets.main.allSource } )
    from files( { project(':util').sourceSets.main.allSource } )
    from files( { project(':processor').sourceSets.main.allSource } )
}

task runtimeJavadoc(type: Javadoc) {
    source files( { project(':common').sourceSets.main.allSource } )
    classpath = files( { project(':common').sourceSets.main.compileClasspath } )
    destinationDir = new File("${project.docsDir}", "runtime-javadoc")
}

task runtimeJavadocJar(type: Jar, dependsOn: runtimeJavadoc) {
    classifier = 'javadoc'
    baseName 'runtime'
    from runtimeJavadoc.destinationDir
}

task processorJavadoc(type: Javadoc) {
    source files( { project(':javawriter').sourceSets.main.allSource } )
    source files( { project(':common').sourceSets.main.allSource } )
    source files( { project(':util').sourceSets.main.allSource } )
    source files( { project(':processor').sourceSets.main.allSource } )
    classpath = files( [
            project(':javawriter').sourceSets.main.compileClasspath,
            project(':common').sourceSets.main.compileClasspath,
            project(':util').sourceSets.main.compileClasspath,
            project(':processor').sourceSets.main.compileClasspath
            ])
    destinationDir = new File("${project.docsDir}", "processor-javadoc")
}

task processorJavadocJar(type: Jar, dependsOn: processorJavadoc) {
    classifier = 'javadoc'
    baseName 'processor'
    from processorJavadoc.destinationDir
}

artifacts {
    archives processorJar
    archives runtimeJar
    archives runtimeSourcesJar
    archives processorSourcesJar
    archives runtimeJavadocJar
    archives processorJavadocJar
}
